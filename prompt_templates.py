"""
专利撰写助手的提示词模板
提供专业的专利生成和优化提示词
"""

from typing import List


class PromptTemplates:
    """专利撰写提示词模板类"""
    
    def get_patent_idea_prompt(self) -> str:
        """获取专利创意生成提示词"""
        return """请生成1个服务器技术领域的创新专利创意。

要求：
1. 专利必须具有实际应用价值和技术创新性
2. 涵盖以下技术领域之一：
   - 服务器硬件架构优化
   - 数据中心能效管理
   - 服务器虚拟化技术
   - 分布式计算优化
   - 服务器安全防护
   - 存储系统创新
   - 网络架构优化
   - 散热与功耗管理

3. 严格按照以下JSON格式返回：
```json
{
    "title": "专利标题（简洁明确，体现核心创新点）",
    "field": "技术领域",
    "features": [
        "核心特性1（具体的技术特点）",
        "核心特性2（具体的技术特点）",
        "核心特性3（具体的技术特点）",
        "核心特性4（具体的技术特点）",
        "核心特性5（具体的技术特点）"
    ],
    "innovation_points": [
        "创新点1",
        "创新点2",
        "创新点3"
    ],
    "application_scenarios": [
        "应用场景1",
        "应用场景2",
        "应用场景3"
    ]
}
```

请确保返回的是有效的JSON格式，不要包含任何其他文字说明。"""

    def get_full_patent_prompt(self, title: str, features: List[str]) -> str:
        """获取完整专利生成提示词"""
        features_text = "\n".join([f"- {feature}" for feature in features])
        
        return f"""请根据以下信息撰写一份完整的专利申请文档：

专利标题：{title}

核心特性：
{features_text}

请按照以下7个标准章节撰写专利文档：

## 1. 专业领域
- 明确说明本发明所属的技术领域
- 描述技术应用场景和目标用户
- 说明在服务器技术体系中的定位

## 2. 技术背景与现有技术
- 详细描述相关技术的发展现状
- 分析现有技术方案的实现方式
- 包含现有技术的流程图或架构图（用文字描述）
- 引用相关技术标准和行业规范

## 3. 现有技术缺点与发明目的
- 深入分析现有技术存在的具体问题
- 量化说明性能瓶颈或效率损失
- 明确本发明要解决的核心技术问题
- 阐述发明的预期目标和效果

## 4. 本发明技术详细方案
- 提供完整的技术实施方案
- 包含关键算法或计算公式（如适用）
- 详细描述系统架构和工作流程
- 提供技术实现的流程图描述
- 说明关键参数的设置和优化方法

## 5. 关键点与保护范围
- 列出本发明的核心创新点（至少5个）
- 明确技术方案的保护范围
- 说明与现有技术的本质区别
- 定义权利要求的边界

## 6. 技术优势对比
- 与现有技术进行详细的性能对比
- 提供量化的改进数据（如性能提升百分比）
- 分析成本效益和实施可行性
- 说明技术优势的持续性

## 7. 替代实施方案
- 提供2-3种不同的技术实施方案
- 说明各方案的适用场景和优缺点
- 描述方案间的技术关联性
- 确保保护范围的完整性

要求：
1. 内容专业、准确，符合专利申请标准
2. 技术描述详细具体，避免空泛表述
3. 包含必要的技术细节和实施要点
4. 确保逻辑清晰，结构完整
5. 字数控制在3000-5000字之间"""

    def get_optimization_prompt(self, patent_content: str, focus: str) -> str:
        """获取专利优化提示词"""
        return f"""请对以下专利内容进行优化，优化重点：{focus}

原始专利内容：
{patent_content}

优化要求：
1. 提升专业性和准确性
2. 增强技术描述的具体性
3. 完善逻辑结构和表达清晰度
4. 确保符合专利申请标准
5. 保持原有的核心创新点

优化重点说明：
- 全面优化：对所有章节进行综合优化
- 技术方案：重点优化技术实施方案的详细性
- 创新点：突出和强化核心创新点的表述
- 保护范围：明确和扩展权利保护范围
- 对比分析：加强与现有技术的对比分析

请返回优化后的完整专利内容，保持原有的章节结构。"""

    def get_patent_analysis_prompt(self, patent_content: str) -> str:
        """获取专利分析提示词"""
        return f"""请对以下专利内容进行专业分析：

专利内容：
{patent_content}

请从以下维度进行分析：

## 1. 技术创新性评估
- 核心创新点识别
- 技术先进性分析
- 创新程度评级（1-10分）

## 2. 专利质量评估
- 技术描述完整性
- 权利要求清晰度
- 保护范围合理性
- 整体质量评分（1-10分）

## 3. 市场应用前景
- 技术应用场景分析
- 市场需求评估
- 商业化可行性

## 4. 改进建议
- 技术方案优化建议
- 权利要求完善建议
- 整体改进方向

请提供详细的分析报告。"""

    def get_patent_comparison_prompt(self, patent1: str, patent2: str) -> str:
        """获取专利对比提示词"""
        return f"""请对以下两个专利进行详细对比分析：

专利A：
{patent1}

专利B：
{patent2}

对比维度：
1. 技术方案差异
2. 创新点对比
3. 保护范围比较
4. 技术优势分析
5. 应用场景差异
6. 综合评估

请提供详细的对比分析报告。""" 